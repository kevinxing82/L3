//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ETCJoystickWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ETCJoystick), typeof(ETCBase));
		L.RegFunction("Start", Start);
		L.RegFunction("Update", Update);
		L.RegFunction("LateUpdate", LateUpdate);
		L.RegFunction("OnPointerEnter", OnPointerEnter);
		L.RegFunction("OnPointerDown", OnPointerDown);
		L.RegFunction("OnBeginDrag", OnBeginDrag);
		L.RegFunction("OnDrag", OnDrag);
		L.RegFunction("OnPointerUp", OnPointerUp);
		L.RegFunction("GetRadius", GetRadius);
		L.RegFunction("InitCurve", InitCurve);
		L.RegFunction("InitTurnMoveCurve", InitTurnMoveCurve);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("onMoveStart", get_onMoveStart, set_onMoveStart);
		L.RegVar("onMove", get_onMove, set_onMove);
		L.RegVar("onMoveSpeed", get_onMoveSpeed, set_onMoveSpeed);
		L.RegVar("onMoveEnd", get_onMoveEnd, set_onMoveEnd);
		L.RegVar("onTouchStart", get_onTouchStart, set_onTouchStart);
		L.RegVar("onTouchUp", get_onTouchUp, set_onTouchUp);
		L.RegVar("OnDownUp", get_OnDownUp, set_OnDownUp);
		L.RegVar("OnDownDown", get_OnDownDown, set_OnDownDown);
		L.RegVar("OnDownLeft", get_OnDownLeft, set_OnDownLeft);
		L.RegVar("OnDownRight", get_OnDownRight, set_OnDownRight);
		L.RegVar("OnPressUp", get_OnPressUp, set_OnPressUp);
		L.RegVar("OnPressDown", get_OnPressDown, set_OnPressDown);
		L.RegVar("OnPressLeft", get_OnPressLeft, set_OnPressLeft);
		L.RegVar("OnPressRight", get_OnPressRight, set_OnPressRight);
		L.RegVar("joystickType", get_joystickType, set_joystickType);
		L.RegVar("allowJoystickOverTouchPad", get_allowJoystickOverTouchPad, set_allowJoystickOverTouchPad);
		L.RegVar("radiusBase", get_radiusBase, set_radiusBase);
		L.RegVar("radiusBaseValue", get_radiusBaseValue, set_radiusBaseValue);
		L.RegVar("axisX", get_axisX, set_axisX);
		L.RegVar("axisY", get_axisY, set_axisY);
		L.RegVar("thumb", get_thumb, set_thumb);
		L.RegVar("joystickArea", get_joystickArea, set_joystickArea);
		L.RegVar("userArea", get_userArea, set_userArea);
		L.RegVar("isTurnAndMove", get_isTurnAndMove, set_isTurnAndMove);
		L.RegVar("tmSpeed", get_tmSpeed, set_tmSpeed);
		L.RegVar("tmAdditionnalRotation", get_tmAdditionnalRotation, set_tmAdditionnalRotation);
		L.RegVar("tmMoveCurve", get_tmMoveCurve, set_tmMoveCurve);
		L.RegVar("tmLockInJump", get_tmLockInJump, set_tmLockInJump);
		L.RegVar("IsNoReturnThumb", get_IsNoReturnThumb, set_IsNoReturnThumb);
		L.RegVar("IsNoOffsetThumb", get_IsNoOffsetThumb, set_IsNoOffsetThumb);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			obj.Start();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			obj.LateUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerEnter(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerDown(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBeginDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnBeginDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerUp(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRadius(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			float o = obj.GetRadius();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitCurve(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			obj.InitCurve();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitTurnMoveCurve(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ETCJoystick obj = (ETCJoystick)ToLua.CheckObject<ETCJoystick>(L, 1);
			obj.InitTurnMoveCurve();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMoveStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnMoveStartHandler ret = obj.onMoveStart;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMoveStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMove(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnMoveHandler ret = obj.onMove;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMove on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMoveSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnMoveSpeedHandler ret = obj.onMoveSpeed;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMoveSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMoveEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnMoveEndHandler ret = obj.onMoveEnd;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMoveEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTouchStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnTouchStartHandler ret = obj.onTouchStart;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTouchStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTouchUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnTouchUpHandler ret = obj.onTouchUp;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTouchUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnDownUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownUpHandler ret = obj.OnDownUp;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDownUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnDownDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownDownHandler ret = obj.OnDownDown;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDownDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnDownLeft(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownLeftHandler ret = obj.OnDownLeft;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDownLeft on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnDownRight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownRightHandler ret = obj.OnDownRight;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDownRight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPressUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownUpHandler ret = obj.OnPressUp;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPressUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPressDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownDownHandler ret = obj.OnPressDown;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPressDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPressLeft(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownLeftHandler ret = obj.OnPressLeft;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPressLeft on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPressRight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownRightHandler ret = obj.OnPressRight;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPressRight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_joystickType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.JoystickType ret = obj.joystickType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index joystickType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allowJoystickOverTouchPad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool ret = obj.allowJoystickOverTouchPad;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allowJoystickOverTouchPad on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_radiusBase(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.RadiusBase ret = obj.radiusBase;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radiusBase on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_radiusBaseValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			float ret = obj.radiusBaseValue;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radiusBaseValue on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_axisX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCAxis ret = obj.axisX;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index axisX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_axisY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCAxis ret = obj.axisY;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index axisY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_thumb(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			UnityEngine.RectTransform ret = obj.thumb;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index thumb on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_joystickArea(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.JoystickArea ret = obj.joystickArea;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index joystickArea on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_userArea(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			UnityEngine.RectTransform ret = obj.userArea;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index userArea on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isTurnAndMove(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool ret = obj.isTurnAndMove;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isTurnAndMove on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tmSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			float ret = obj.tmSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tmSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tmAdditionnalRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			float ret = obj.tmAdditionnalRotation;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tmAdditionnalRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tmMoveCurve(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			UnityEngine.AnimationCurve ret = obj.tmMoveCurve;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tmMoveCurve on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tmLockInJump(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool ret = obj.tmLockInJump;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tmLockInJump on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsNoReturnThumb(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool ret = obj.IsNoReturnThumb;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsNoReturnThumb on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsNoOffsetThumb(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool ret = obj.IsNoOffsetThumb;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsNoOffsetThumb on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMoveStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnMoveStartHandler arg0 = (ETCJoystick.OnMoveStartHandler)ToLua.CheckObject<ETCJoystick.OnMoveStartHandler>(L, 2);
			obj.onMoveStart = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMoveStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMove(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnMoveHandler arg0 = (ETCJoystick.OnMoveHandler)ToLua.CheckObject<ETCJoystick.OnMoveHandler>(L, 2);
			obj.onMove = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMove on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMoveSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnMoveSpeedHandler arg0 = (ETCJoystick.OnMoveSpeedHandler)ToLua.CheckObject<ETCJoystick.OnMoveSpeedHandler>(L, 2);
			obj.onMoveSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMoveSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMoveEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnMoveEndHandler arg0 = (ETCJoystick.OnMoveEndHandler)ToLua.CheckObject<ETCJoystick.OnMoveEndHandler>(L, 2);
			obj.onMoveEnd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMoveEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTouchStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnTouchStartHandler arg0 = (ETCJoystick.OnTouchStartHandler)ToLua.CheckObject<ETCJoystick.OnTouchStartHandler>(L, 2);
			obj.onTouchStart = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTouchStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTouchUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnTouchUpHandler arg0 = (ETCJoystick.OnTouchUpHandler)ToLua.CheckObject<ETCJoystick.OnTouchUpHandler>(L, 2);
			obj.onTouchUp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTouchUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnDownUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownUpHandler arg0 = (ETCJoystick.OnDownUpHandler)ToLua.CheckObject<ETCJoystick.OnDownUpHandler>(L, 2);
			obj.OnDownUp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDownUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnDownDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownDownHandler arg0 = (ETCJoystick.OnDownDownHandler)ToLua.CheckObject<ETCJoystick.OnDownDownHandler>(L, 2);
			obj.OnDownDown = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDownDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnDownLeft(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownLeftHandler arg0 = (ETCJoystick.OnDownLeftHandler)ToLua.CheckObject<ETCJoystick.OnDownLeftHandler>(L, 2);
			obj.OnDownLeft = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDownLeft on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnDownRight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownRightHandler arg0 = (ETCJoystick.OnDownRightHandler)ToLua.CheckObject<ETCJoystick.OnDownRightHandler>(L, 2);
			obj.OnDownRight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDownRight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPressUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownUpHandler arg0 = (ETCJoystick.OnDownUpHandler)ToLua.CheckObject<ETCJoystick.OnDownUpHandler>(L, 2);
			obj.OnPressUp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPressUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPressDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownDownHandler arg0 = (ETCJoystick.OnDownDownHandler)ToLua.CheckObject<ETCJoystick.OnDownDownHandler>(L, 2);
			obj.OnPressDown = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPressDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPressLeft(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownLeftHandler arg0 = (ETCJoystick.OnDownLeftHandler)ToLua.CheckObject<ETCJoystick.OnDownLeftHandler>(L, 2);
			obj.OnPressLeft = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPressLeft on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPressRight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.OnDownRightHandler arg0 = (ETCJoystick.OnDownRightHandler)ToLua.CheckObject<ETCJoystick.OnDownRightHandler>(L, 2);
			obj.OnPressRight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPressRight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_joystickType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.JoystickType arg0 = (ETCJoystick.JoystickType)ToLua.CheckObject(L, 2, typeof(ETCJoystick.JoystickType));
			obj.joystickType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index joystickType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allowJoystickOverTouchPad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.allowJoystickOverTouchPad = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allowJoystickOverTouchPad on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_radiusBase(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.RadiusBase arg0 = (ETCJoystick.RadiusBase)ToLua.CheckObject(L, 2, typeof(ETCJoystick.RadiusBase));
			obj.radiusBase = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radiusBase on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_radiusBaseValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.radiusBaseValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radiusBaseValue on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_axisX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCAxis arg0 = (ETCAxis)ToLua.CheckObject<ETCAxis>(L, 2);
			obj.axisX = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index axisX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_axisY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCAxis arg0 = (ETCAxis)ToLua.CheckObject<ETCAxis>(L, 2);
			obj.axisY = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index axisY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_thumb(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			UnityEngine.RectTransform arg0 = (UnityEngine.RectTransform)ToLua.CheckObject(L, 2, typeof(UnityEngine.RectTransform));
			obj.thumb = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index thumb on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_joystickArea(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			ETCJoystick.JoystickArea arg0 = (ETCJoystick.JoystickArea)ToLua.CheckObject(L, 2, typeof(ETCJoystick.JoystickArea));
			obj.joystickArea = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index joystickArea on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_userArea(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			UnityEngine.RectTransform arg0 = (UnityEngine.RectTransform)ToLua.CheckObject(L, 2, typeof(UnityEngine.RectTransform));
			obj.userArea = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index userArea on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isTurnAndMove(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isTurnAndMove = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isTurnAndMove on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tmSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.tmSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tmSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tmAdditionnalRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.tmAdditionnalRotation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tmAdditionnalRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tmMoveCurve(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			UnityEngine.AnimationCurve arg0 = (UnityEngine.AnimationCurve)ToLua.CheckObject<UnityEngine.AnimationCurve>(L, 2);
			obj.tmMoveCurve = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tmMoveCurve on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tmLockInJump(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.tmLockInJump = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tmLockInJump on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsNoReturnThumb(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsNoReturnThumb = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsNoReturnThumb on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsNoOffsetThumb(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ETCJoystick obj = (ETCJoystick)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsNoOffsetThumb = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsNoOffsetThumb on a nil value");
		}
	}
}

